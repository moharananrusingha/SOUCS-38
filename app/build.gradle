plugins {
    id 'com.android.application'
    id 'kotlin-android'
    //id 'kotlin-kapt'  //For Anotation Processing
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

//apply from: 'buildscripts/jacoco.gradle'
apply from: '../jacoco.gradle'
apply from: '../sonarqube.gradle'


android {
    compileSdk 31

    defaultConfig {
        applicationId "com.inadev.soucs"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "com.inadev.soucs.SOUCSTestRunner"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
//            returnDefaultValues = true
        }
    }

    buildFeatures {
        //dataBinding true
        viewBinding true
    }
}
/*hilt {
    enableExperimentalClasspathAggregation = true
}*/

dependencies {

    def lifecycle_version = "2.3.1"
    def coroutine_version = "1.5.1"
    def room_version = "2.3.0"
    def retrofit_version = "2.9.0"
    def okhttp_logging_interceptor_version = "4.9.1"
    def arch_version = "2.1.0"
    def unittest_truth_version = "1.1.3"
    def coroutines_test_version = "1.5.1"
    def robolelectric_version  = "4.6.1"
    def Glide_version = "4.11.0"
    def junit_version = "4.13.2"
    def mockito_core_version = "3.5.15"
    def mock_web_server_version = "4.9.1"
    def androidx_test_rules_version = "1.4.0"
    def multidex_version = "2.0.1"

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //Livedata and View Model
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    //Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Annotation processor
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //Room
    //Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_interceptor_version"

    //dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    annotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"

    //Glide
    implementation "com.github.bumptech.glide:glide:$Glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$Glide_version"


    implementation "androidx.multidex:multidex:$multidex_version"

    //implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'

    testImplementation "junit:junit:$junit_version"
    // Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "com.google.truth:truth:$unittest_truth_version"
    // Mockito framework
    testImplementation "org.mockito:mockito-core:$mockito_core_version"
    //Room-coroutines
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version"
    testImplementation "org.robolectric:robolectric:$robolelectric_version"

    testImplementation 'androidx.test.ext:junit:1.1.3'

    testImplementation "com.squareup.okhttp3:mockwebserver:$mock_web_server_version"

    testImplementation "androidx.test:rules:$androidx_test_rules_version"
    testImplementation "androidx.test:core-ktx:$androidx_test_rules_version"

    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    androidTestImplementation "com.google.truth:truth:$unittest_truth_version"
    androidTestImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_test_version") {
        // conflicts with mockito due to direct inclusion of byte buddy
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    androidTestImplementation "androidx.test:rules:$androidx_test_rules_version"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_rules_version"
}


